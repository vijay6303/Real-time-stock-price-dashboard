"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/stocks";
exports.ids = ["pages/api/stocks"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fstocks&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cstocks%5Cindex.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fstocks&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cstocks%5Cindex.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_stocks_index_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\stocks\\index.ts */ \"(api)/./pages/api/stocks/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_stocks_index_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_stocks_index_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_stocks_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_stocks_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/stocks\",\n        pathname: \"/api/stocks\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_stocks_index_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnN0b2NrcyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDc3RvY2tzJTVDaW5kZXgudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDMkQ7QUFDM0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHVEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx1REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9jay1kYXNoYm9hcmQvPzg3MjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxzdG9ja3NcXFxcaW5kZXgudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zdG9ja3NcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zdG9ja3NcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fstocks&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cstocks%5Cindex.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/alpha-vantage.ts":
/*!******************************!*\
  !*** ./lib/alpha-vantage.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POPULAR_STOCKS: () => (/* binding */ POPULAR_STOCKS),\n/* harmony export */   fetchMultipleStocks: () => (/* binding */ fetchMultipleStocks),\n/* harmony export */   fetchStockData: () => (/* binding */ fetchStockData),\n/* harmony export */   fetchStockQuote: () => (/* binding */ fetchStockQuote),\n/* harmony export */   fetchTimeSeriesDaily: () => (/* binding */ fetchTimeSeriesDaily)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst API_KEY = \"demo\" || 0;\nconst BASE_URL = \"https://www.alphavantage.co/query\";\nconst USE_YAHOO = \"false\" === \"true\";\nconst POPULAR_STOCKS = [\n    \"AAPL\",\n    \"GOOGL\",\n    \"MSFT\",\n    \"AMZN\",\n    \"TSLA\",\n    \"META\",\n    \"NVDA\",\n    \"NFLX\"\n];\n// Enhanced mock data generator (completely free)\nconst generateRealisticMockData = (symbol)=>{\n    const baseData = {\n        \"AAPL\": {\n            price: 175,\n            volume: 50000000,\n            marketCap: 2800000000000\n        },\n        \"GOOGL\": {\n            price: 140,\n            volume: 25000000,\n            marketCap: 1750000000000\n        },\n        \"MSFT\": {\n            price: 380,\n            volume: 35000000,\n            marketCap: 2850000000000\n        },\n        \"AMZN\": {\n            price: 145,\n            volume: 40000000,\n            marketCap: 1500000000000\n        },\n        \"TSLA\": {\n            price: 248,\n            volume: 70000000,\n            marketCap: 790000000000\n        },\n        \"META\": {\n            price: 350,\n            volume: 30000000,\n            marketCap: 890000000000\n        },\n        \"NVDA\": {\n            price: 480,\n            volume: 45000000,\n            marketCap: 1200000000000\n        },\n        \"NFLX\": {\n            price: 420,\n            volume: 15000000,\n            marketCap: 180000000000\n        }\n    };\n    const base = baseData[symbol] || baseData[\"AAPL\"];\n    // Add realistic daily variation\n    const variation = (Math.random() - 0.5) * 0.05; // ±5% variation\n    const price = base.price * (1 + variation);\n    const change = base.price * variation;\n    const changePercent = variation * 100;\n    return {\n        symbol,\n        price: Math.round(price * 100) / 100,\n        change: Math.round(change * 100) / 100,\n        changePercent: Math.round(changePercent * 100) / 100,\n        volume: base.volume + Math.floor((Math.random() - 0.5) * base.volume * 0.3),\n        marketCap: base.marketCap,\n        lastUpdated: new Date().toISOString()\n    };\n};\n// Yahoo Finance with timeout and retry logic\nasync function fetchYahooFinanceData(symbol) {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(()=>controller.abort(), 3000); // 3 second timeout\n    try {\n        console.log(`🆓 Yahoo Finance: Fetching ${symbol} (3s timeout)`);\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://query1.finance.yahoo.com/v8/finance/chart/${symbol}`, {\n            timeout: 3000,\n            signal: controller.signal,\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\"\n            }\n        });\n        clearTimeout(timeoutId);\n        const result = response.data?.chart?.result?.[0];\n        if (!result) {\n            throw new Error(\"Invalid Yahoo Finance response structure\");\n        }\n        const meta = result.meta;\n        const currentPrice = meta.regularMarketPrice || meta.previousClose || 0;\n        const previousClose = meta.previousClose || currentPrice;\n        const change = currentPrice - previousClose;\n        const changePercent = previousClose > 0 ? change / previousClose * 100 : 0;\n        console.log(`✅ Yahoo Finance: ${symbol} = $${currentPrice}`);\n        return {\n            symbol: meta.symbol || symbol,\n            price: Number(currentPrice.toFixed(2)),\n            change: Number(change.toFixed(2)),\n            changePercent: Number(changePercent.toFixed(2)),\n            volume: meta.regularMarketVolume || 0,\n            marketCap: meta.marketCap || undefined,\n            lastUpdated: new Date().toISOString()\n        };\n    } catch (error) {\n        clearTimeout(timeoutId);\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n        console.warn(`❌ Yahoo Finance failed for ${symbol}:`, errorMessage);\n        throw error;\n    }\n}\n// Alpha Vantage API with better error handling\nasync function fetchAlphaVantageData(symbol) {\n    try {\n        console.log(`📊 Alpha Vantage: Fetching ${symbol}`);\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(BASE_URL, {\n            params: {\n                function: \"GLOBAL_QUOTE\",\n                symbol: symbol,\n                apikey: API_KEY\n            },\n            timeout: 10000\n        });\n        const data = response.data;\n        // Check for API limit or error\n        if (data[\"Note\"] || data[\"Information\"]) {\n            throw new Error(\"API limit reached or invalid response\");\n        }\n        if (data[\"Global Quote\"] && Object.keys(data[\"Global Quote\"]).length > 0) {\n            const quote = data[\"Global Quote\"];\n            return {\n                symbol: quote[\"01. symbol\"],\n                price: parseFloat(quote[\"05. price\"]),\n                change: parseFloat(quote[\"09. change\"]),\n                changePercent: parseFloat(quote[\"10. change percent\"].replace(\"%\", \"\")),\n                volume: parseInt(quote[\"06. volume\"]),\n                lastUpdated: new Date().toISOString()\n            };\n        }\n        throw new Error(\"Invalid API response structure\");\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n        console.warn(`Alpha Vantage API failed for ${symbol}:`, errorMessage);\n        throw error;\n    }\n}\n// Simplified and faster stock quote fetch\nasync function fetchStockQuote(symbol) {\n    console.log(`📊 Quick fetch: ${symbol}`);\n    try {\n        // Try Yahoo Finance first (free and faster)\n        if (USE_YAHOO) {\n            return await fetchYahooFinanceData(symbol);\n        }\n        // Try Alpha Vantage as fallback\n        return await fetchAlphaVantageData(symbol);\n    } catch (error) {\n        console.log(`⚡ Using mock data for ${symbol} (API failed)`);\n        return generateRealisticMockData(symbol);\n    }\n}\n// Fast batch fetching with concurrent requests\nasync function fetchMultipleStocks(symbols) {\n    console.log(`📊 Batch fetching ${symbols.length} stocks with 2s timeout per stock`);\n    // Use Promise.allSettled to prevent one failure from blocking others\n    const promises = symbols.map(async (symbol)=>{\n        try {\n            // Add a per-stock timeout\n            const timeoutPromise = new Promise((_, reject)=>setTimeout(()=>reject(new Error(\"Stock timeout\")), 2000));\n            const stockPromise = fetchStockQuote(symbol);\n            return await Promise.race([\n                stockPromise,\n                timeoutPromise\n            ]);\n        } catch (error) {\n            console.log(`⚡ Timeout/error for ${symbol}, using mock data`);\n            return generateRealisticMockData(symbol);\n        }\n    });\n    const results = await Promise.allSettled(promises);\n    return results.map((result, index)=>{\n        if (result.status === \"fulfilled\") {\n            return result.value;\n        } else {\n            console.log(`📝 Using fallback mock data for ${symbols[index]}`);\n            return generateRealisticMockData(symbols[index]);\n        }\n    });\n}\nasync function fetchTimeSeriesDaily(symbol) {\n    try {\n        if (USE_YAHOO) {\n            console.log(`📈 Fetching Yahoo Finance chart data for ${symbol}`);\n            // Yahoo Finance historical data (FREE)\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://query1.finance.yahoo.com/v8/finance/chart/${symbol}`, {\n                params: {\n                    range: \"1mo\",\n                    interval: \"1d\"\n                },\n                timeout: 10000,\n                headers: {\n                    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\"\n                }\n            });\n            const result = response.data?.chart?.result?.[0];\n            if (result && result.timestamp && result.indicators?.quote?.[0]) {\n                const timestamps = result.timestamp;\n                const quotes = result.indicators.quote[0];\n                const chartData = timestamps.map((timestamp, index)=>({\n                        date: new Date(timestamp * 1000).toLocaleDateString(\"en-US\", {\n                            month: \"short\",\n                            day: \"numeric\"\n                        }),\n                        price: quotes.close[index] || quotes.open[index] || 0,\n                        volume: quotes.volume[index] || 0\n                    })).filter((item)=>item.price > 0).slice(-30);\n                console.log(`📊 Generated ${chartData.length} chart points for ${symbol}`);\n                return chartData;\n            }\n        }\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n        console.warn(`Chart data API failed for ${symbol}:`, errorMessage);\n    }\n    // Generate realistic mock chart data with proper 30-day progression\n    console.log(`📈 Generating comprehensive mock chart data for ${symbol}`);\n    const data = [];\n    const baseStock = generateRealisticMockData(symbol);\n    let currentPrice = baseStock.price;\n    // Generate 30 days of realistic price data\n    for(let i = 29; i >= 0; i--){\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        // Create realistic day-to-day price movements\n        const dailyChange = (Math.random() - 0.5) * 0.03; // ±3% daily variation\n        currentPrice = Math.max(currentPrice * (1 + dailyChange), 1); // Ensure price stays positive\n        data.push({\n            date: date.toLocaleDateString(\"en-US\", {\n                month: \"short\",\n                day: \"numeric\"\n            }),\n            price: Math.round(currentPrice * 100) / 100,\n            volume: Math.floor(Math.random() * 50000000) + 10000000\n        });\n    }\n    console.log(`📊 Generated ${data.length} mock chart points for ${symbol}`);\n    return data;\n}\n// Legacy function for compatibility (now deprecated)\nasync function fetchStockData(symbol) {\n    console.warn(\"fetchStockData is deprecated, use fetchStockQuote instead\");\n    return fetchStockQuote(symbol);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/alpha-vantage.ts\n");

/***/ }),

/***/ "(api)/./pages/api/stocks/index.ts":
/*!***********************************!*\
  !*** ./pages/api/stocks/index.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_alpha_vantage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/alpha-vantage */ \"(api)/./lib/alpha-vantage.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_alpha_vantage__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_alpha_vantage__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { symbols } = req.query;\n        let stockSymbols = [];\n        if (typeof symbols === \"string\") {\n            stockSymbols = symbols.split(\",\").map((s)=>s.trim().toUpperCase());\n        } else if (Array.isArray(symbols)) {\n            stockSymbols = symbols.map((s)=>String(s).trim().toUpperCase());\n        } else {\n            // Default symbols if none provided\n            stockSymbols = [\n                \"AAPL\",\n                \"GOOGL\",\n                \"MSFT\",\n                \"AMZN\",\n                \"TSLA\",\n                \"META\"\n            ];\n        }\n        console.log(`API: Fetching stocks for symbols: ${stockSymbols.join(\", \")}`);\n        const stocks = await (0,_lib_alpha_vantage__WEBPACK_IMPORTED_MODULE_0__.fetchMultipleStocks)(stockSymbols);\n        res.status(200).json({\n            success: true,\n            data: stocks,\n            count: stocks.length,\n            timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error(\"API Error fetching stocks:\", error);\n        res.status(500).json({\n            success: false,\n            error: \"Failed to fetch stock data\",\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc3RvY2tzL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ2lFO0FBRWxELGVBQWVDLFFBQVFDLEdBQW1CLEVBQUVDLEdBQW9CO0lBQzdFLElBQUlELElBQUlFLE1BQU0sS0FBSyxPQUFPO1FBQ3hCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUFxQjtJQUM1RDtJQUVBLElBQUk7UUFDRixNQUFNLEVBQUVDLE9BQU8sRUFBRSxHQUFHTixJQUFJTyxLQUFLO1FBQzdCLElBQUlDLGVBQXlCLEVBQUU7UUFFL0IsSUFBSSxPQUFPRixZQUFZLFVBQVU7WUFDL0JFLGVBQWVGLFFBQVFHLEtBQUssQ0FBQyxLQUFLQyxHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLElBQUksR0FBR0MsV0FBVztRQUNqRSxPQUFPLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ1QsVUFBVTtZQUNqQ0UsZUFBZUYsUUFBUUksR0FBRyxDQUFDQyxDQUFBQSxJQUFLSyxPQUFPTCxHQUFHQyxJQUFJLEdBQUdDLFdBQVc7UUFDOUQsT0FBTztZQUNMLG1DQUFtQztZQUNuQ0wsZUFBZTtnQkFBQztnQkFBUTtnQkFBUztnQkFBUTtnQkFBUTtnQkFBUTthQUFPO1FBQ2xFO1FBRUFTLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLGtDQUFrQyxFQUFFVixhQUFhVyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBRTFFLE1BQU1DLFNBQVMsTUFBTXRCLHVFQUFtQkEsQ0FBQ1U7UUFFekNQLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDbkJpQixTQUFTO1lBQ1RDLE1BQU1GO1lBQ05HLE9BQU9ILE9BQU9JLE1BQU07WUFDcEJDLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztRQUNuQztJQUNGLEVBQUUsT0FBT3RCLE9BQU87UUFDZFksUUFBUVosS0FBSyxDQUFDLDhCQUE4QkE7UUFDNUNKLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDbkJpQixTQUFTO1lBQ1RoQixPQUFPO1lBQ1B1QixTQUFTdkIsaUJBQWlCd0IsUUFBUXhCLE1BQU11QixPQUFPLEdBQUc7UUFDcEQ7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RvY2stZGFzaGJvYXJkLy4vcGFnZXMvYXBpL3N0b2Nrcy9pbmRleC50cz8xY2IxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcclxuaW1wb3J0IHsgZmV0Y2hNdWx0aXBsZVN0b2NrcyB9IGZyb20gJy4uLy4uLy4uL2xpYi9hbHBoYS12YW50YWdlJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpIHtcclxuICBpZiAocmVxLm1ldGhvZCAhPT0gJ0dFVCcpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHN5bWJvbHMgfSA9IHJlcS5xdWVyeTtcclxuICAgIGxldCBzdG9ja1N5bWJvbHM6IHN0cmluZ1tdID0gW107XHJcblxyXG4gICAgaWYgKHR5cGVvZiBzeW1ib2xzID09PSAnc3RyaW5nJykge1xyXG4gICAgICBzdG9ja1N5bWJvbHMgPSBzeW1ib2xzLnNwbGl0KCcsJykubWFwKHMgPT4gcy50cmltKCkudG9VcHBlckNhc2UoKSk7XHJcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoc3ltYm9scykpIHtcclxuICAgICAgc3RvY2tTeW1ib2xzID0gc3ltYm9scy5tYXAocyA9PiBTdHJpbmcocykudHJpbSgpLnRvVXBwZXJDYXNlKCkpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gRGVmYXVsdCBzeW1ib2xzIGlmIG5vbmUgcHJvdmlkZWRcclxuICAgICAgc3RvY2tTeW1ib2xzID0gWydBQVBMJywgJ0dPT0dMJywgJ01TRlQnLCAnQU1aTicsICdUU0xBJywgJ01FVEEnXTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zb2xlLmxvZyhgQVBJOiBGZXRjaGluZyBzdG9ja3MgZm9yIHN5bWJvbHM6ICR7c3RvY2tTeW1ib2xzLmpvaW4oJywgJyl9YCk7XHJcblxyXG4gICAgY29uc3Qgc3RvY2tzID0gYXdhaXQgZmV0Y2hNdWx0aXBsZVN0b2NrcyhzdG9ja1N5bWJvbHMpO1xyXG5cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgZGF0YTogc3RvY2tzLFxyXG4gICAgICBjb3VudDogc3RvY2tzLmxlbmd0aCxcclxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignQVBJIEVycm9yIGZldGNoaW5nIHN0b2NrczonLCBlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBzdG9jayBkYXRhJyxcclxuICAgICAgbWVzc2FnZTogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcicsXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbiJdLCJuYW1lcyI6WyJmZXRjaE11bHRpcGxlU3RvY2tzIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsInN5bWJvbHMiLCJxdWVyeSIsInN0b2NrU3ltYm9scyIsInNwbGl0IiwibWFwIiwicyIsInRyaW0iLCJ0b1VwcGVyQ2FzZSIsIkFycmF5IiwiaXNBcnJheSIsIlN0cmluZyIsImNvbnNvbGUiLCJsb2ciLCJqb2luIiwic3RvY2tzIiwic3VjY2VzcyIsImRhdGEiLCJjb3VudCIsImxlbmd0aCIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsIm1lc3NhZ2UiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/stocks/index.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fstocks&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cstocks%5Cindex.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();